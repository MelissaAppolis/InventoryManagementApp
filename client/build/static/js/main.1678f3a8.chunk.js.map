{"version":3,"sources":["serviceWorker.js","actions/index.action.js","actions/types.action.js","components/AdminInventoryList.js","components/CreateStockItem.js","components/EditStockItem.js","components/CustomInput.js","components/Login.js","reducers/auth.reducer.js","reducers/index.reducer.js","components/UserInventoryList.js","components/Navbar.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","oauthGoogle","data","dispatch","a","axios","post","access_token","res","type","payload","token","localStorage","setItem","oauthFacebook","login","role","signOut","removeItem","Inventory","props","className","inventory","id","date","item_name","item_description","item_category","colour","project_location","cost_price","quantity","to","_id","style","textDecoration","onClick","deleteItem","AdminInventoryList","_isMounted","bind","state","this","get","then","response","setState","catch","error","console","log","prevProps","prevState","JSON","stringify","delete","filter","el","map","currentitem","key","isAdmin","width","inventoryList","Component","connect","isAuth","auth","isAuthenticated","actions","CreateStockItem","onChangeId","onChangeDate","onChangeItemName","onChangeItemDescription","onChangeItemCategory","onChangeColour","onChangeProjectLocation","onChangeCostPrice","onChangeQuantity","onSubmit","Date","toLocaleDateString","e","target","value","event","maskedValue","preventDefault","newItem","path","component","marginTop","onChange","required","readOnly","prefix","EditStockItem","params","updateItem","put","history","push","CustomInput","input","htmlFor","label","name","placeholder","Login","responseGoogle","responseFacebook","formData","accessToken","errorMessage","handleSubmit","Field","appId","textButton","fields","callback","clientId","buttonText","onSuccess","onFailure","compose","reduxForm","form","DEFAULT_STATE","combineReducers","formReducer","action","UserInventoryList","Navbar","marginBottom","App","children","jwtToken","getItem","ReactDOM","render","store","createStore","reducers","applyMiddleware","reduxThunk","exact","document","querySelector","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1678f3a8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\nimport { AUTH_LOGIN, AUTH_SIGN_OUT, AUTH_ERROR, SET_ADMIN_PRIVILEGES } from './types.action'\n\n// Action creator for Google login.\n// Using axios to add a users' credentials\nexport const oauthGoogle = data => {\n    return async dispatch => {\n        const res = await axios.post('http://localhost:3001/users/oauth/google', {\n            access_token: data\n        })\n        dispatch({\n            type: AUTH_LOGIN,\n            payload: res.data.token\n        });\n\n        localStorage.setItem('JWT_TOKEN', res.data.token);\n    };\n}\n\n// Action creator for Facebook login\n// Using axios to add a users' credentials\nexport const oauthFacebook = data => {\n    return async dispatch => {\n        const res = await axios.post('http://localhost:3001/users/oauth/facebook', {\n            access_token: data\n        })\n        dispatch({\n            type: AUTH_LOGIN,\n            payload: res.data.token\n        });\n\n        localStorage.setItem('JWT_TOKEN', res.data.token);\n\n    };\n}\n\n\n// Action Creator for local login\nexport const login = data => {\n    // Use the form data to make HTTP request to the backend and send it along.    \n    // Take the backend response and get jwtToken.    \n    // Dispatch 'user just signed up' (with jwtToken).\n    // Save the jwtToken into our localStorage.\n    return async dispatch  => {\n        try {\n            const res = await axios.post('http://localhost:3001/users/login', data)\n\n            dispatch({\n                type: AUTH_LOGIN,\n                payload: res.data.token\n            });\n\n            localStorage.setItem('JWT_TOKEN', res.data.token);\n\n            // If user is authenticated ad admin dispatch action where admin is true.\n            if(res.data.role === 'Admin') {\n                dispatch({ type: SET_ADMIN_PRIVILEGES });\n                localStorage.setItem('Admin', true)\n            };\n        } catch(err) {\n            dispatch({\n                type: AUTH_ERROR,\n                payload: 'Email is already in use'\n            });\n        }\n    };\n}\n\n// Action creator to log a user out by removing jwt token and admin key.\nexport const signOut = () => {\n    return dispatch => {\n        localStorage.removeItem('JWT_TOKEN');\n        localStorage.removeItem('Admin');\n\n        dispatch({\n            type: AUTH_SIGN_OUT,\n            payload: ''\n        })\n    };\n}","// Set action types\nexport const AUTH_LOGIN = 'AUTH_LOGIN';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const AUTH_SIGN_OUT = 'AUTH_SIGN_OUT';\nexport const SET_ADMIN_PRIVILEGES = 'SET_ADMIN_PRIVILEGES';","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport * as actions from '/Users/melissa/Desktop/InventoryManagementApp/client/src/actions/index.action';\n\n\n// Creating function to dislpay the stock items within a table layout and adding an edit link and a delete button to every line item.\nconst Inventory = props => (\n    <tr>\n        <td className=\"idTableData\">{props.inventory.id}</td>\n        <td>{props.inventory.date}</td>\n        <td>{props.inventory.item_name}</td>\n        <td>{props.inventory.item_description}</td>\n        <td>{props.inventory.item_category}</td>\n        <td>{props.inventory.colour}</td>\n        <td>{props.inventory.project_location}</td>\n        <td className=\"costPriceTableData\">R {props.inventory.cost_price}</td>\n        <td className=\"quantityTableData\">{props.inventory.quantity}</td>\n        <td className=\"editDeleteTableData\">\n           <Link to={\"/edit/\"+props.inventory._id} className=\"editButton\" style={{textDecoration: 'none'}}>edit</Link><button className=\"deleteButton\" onClick={() => { props.deleteItem(props.inventory._id) }}>delete</button> \n        </td> \n    </tr>\n)\n\nclass AdminInventoryList extends Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n\n        this.deleteItem = this.deleteItem.bind(this);\n\n        this.state = {inventory: []};// Setting initial state as an  array to store the inventory list in this array\n    }\n\n\n    // Getting the inventory list from the database\n    componentDidMount() {\n        this._isMounted = true;\n\n        axios.get('http://localhost:3001/inventory/')\n        .then(response => {\n            if (this._isMounted) {\n                this.setState({inventory: response.data});\n            } \n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        axios.get('http://localhost:3001/inventory/')\n        .then(response => {\n            // compare initital state with update state\n            if (JSON.stringify(response.data) !== JSON.stringify(this.state.inventory)) {\n                this.setState({inventory: response.data});\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    // Delete an item from the inventory list using MongoDB automatic ID\n    deleteItem(id) {\n        axios.delete(`http://localhost:3001/inventory/delete/${id}`)\n        .then(res => console.log(res.data));\n\n        this.setState({\n            inventory: this.state.inventory.filter(el => el._id !== id)\n        })\n    }\n\n    // Using array.map to create an array of all stock items stored in the database.\n    inventoryList() {\n        return this.state.inventory.map(currentitem => {\n            return <Inventory inventory={currentitem} deleteItem={this.deleteItem} key={currentitem._id} />\n        });\n    }\n\n    // This inventory list will only be display if the user is logged in as an admin, thus using this.props.isAdmin\n    render() {\n        return (\n            <div className=\"inventoryList\">\n                { this.props.isAdmin ? \n                [<h3 key=\"adminHeading\">Inventory List</h3>,\n                <table className=\"table table-bordered table-hover inventoryListTable\" style={{ width: '100%' }} key=\"tables\">\n                    <thead>\n                        <tr>\n                            <th className=\"idTableHeading\">ID</th>\n                            <th>Date Added</th>\n                            <th>Item Name</th>\n                            <th>Item Description</th>\n                            <th>Item Category</th>\n                            <th>Colour</th>\n                            <th>Project Location</th>\n                            <th>Cost Price</th>\n                            <th>Quantity</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.inventoryList() }\n                    </tbody>\n                </table> ] : <h1>Please Login as an admin to view admin inventory list</h1> }\n            </div>\n        )\n    }\n}\n\n// Using mapStateToProps to use isAuthenticated and isAdmin state\nfunction mapStateToProps(state) {\n    return {\n        isAuth: state.auth.isAuthenticated,\n        isAdmin: state.auth.isAdmin\n    }\n}\n\nexport default connect(mapStateToProps, actions)(AdminInventoryList);\n","import React, { Component } from 'react';\nimport CurrencyInput from 'react-currency-input';// importing react component to input currency prefix in cost_price input tag, also supports decimals.\nimport axios from 'axios';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '/Users/melissa/Desktop/InventoryManagementApp/client/src/actions/index.action';\n\n// Import component\nimport AdminInventoryList from './AdminInventoryList';\n\nclass CreateStockItem extends Component {\n    // Setting intial state and binding each event function to use state.\n    constructor(props) {\n        super(props);\n\n        this.onChangeId = this.onChangeId.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onChangeItemName = this.onChangeItemName.bind(this);\n        this.onChangeItemDescription = this.onChangeItemDescription.bind(this);\n        this.onChangeItemCategory = this.onChangeItemCategory.bind(this);\n        this.onChangeColour = this.onChangeColour.bind(this);\n        this.onChangeProjectLocation = this.onChangeProjectLocation.bind(this);\n        this.onChangeCostPrice = this.onChangeCostPrice.bind(this);\n        this.onChangeQuantity = this.onChangeQuantity.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            id: '',\n            date: new Date().toLocaleDateString(),\n            item_name: '',\n            item_description: '',\n            item_category: '',\n            colour: '',\n            project_location: '',\n            cost_price: 0.00,\n            quantity: 0\n        }\n    }\n        onChangeId(e) {\n            this.setState({\n                id: e.target.value\n            });\n        }\n\n        onChangeDate(e) {\n            this.setState({\n                date: e.target.value\n            });\n        }\n\n        onChangeItemName(e) {\n            this.setState({\n                item_name: e.target.value\n            });\n        }\n\n        onChangeItemDescription(e) {\n            this.setState({\n                item_description: e.target.value\n            });\n        }\n\n        onChangeItemCategory(e) {\n            this.setState({\n                item_category: e.target.value\n            });\n        }\n\n        onChangeColour(e) {\n            this.setState({\n                colour: e.target.value\n            });\n        }\n\n        onChangeProjectLocation(e) {\n            this.setState({\n                project_location: e.target.value\n            });\n        }\n\n        onChangeCostPrice(event, value, maskedValue) {\n            this.setState({cost_price: value\n            });\n        }\n\n        onChangeQuantity(e) {\n            this.setState({\n                quantity: e.target.value\n            });\n        }\n\n        // Adding the stock item to the database by using axios.post\n        onSubmit(e) {\n            e.preventDefault();\n\n            const newItem = {\n                id: this.state.id,\n                date: this.state.date,\n                item_name: this.state.item_name,\n                item_description: this.state.item_description,\n                item_category: this.state.item_category,\n                colour: this.state.colour,\n                project_location: this.state.project_location,\n                cost_price: this.state.cost_price,\n                quantity: this.state.quantity\n            }\n\n            axios.post('http://localhost:3001/inventory/add', newItem)\n                .then(res => console.log(res.data));\n\n            this.setState({\n                id: '',\n                date: new Date().toLocaleDateString(),\n                item_name: '',\n                item_description: '',\n                item_category: '',\n                colour: '',\n                project_location: '',\n                cost_price: 0.00,\n                quantity: 0\n            })\n        }\n    \n    // Create Stock Item form will only be display if the user is logged in as an admin, thus using this.props.isAdmin\n    render() {\n        const { match } = this.props\n        return (\n            <div>\n                {/* Matching /admin and /create routes when user clicks these links in Navbar */}\n                <Switch>\n                    <Route path={`${match.path}/admin`} component={AdminInventoryList} />\n                    <Route path={`${match.path}/create`} component={CreateStockItem} />\n                </Switch>\n            <div className=\"container\" style={{marginTop: 20}}>\n                { this.props.isAdmin ?\n                [<h3 key=\"formHeading\">Add Stock Item</h3>,\n                <form onSubmit={this.onSubmit} key=\"form\">\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-1 col-form-label\">ID: </label>\n                        <div className=\"col-sm-4\">\n                            <input  type=\"text\" \n                                className=\"form-control form-control-sm\"\n                                value={this.state.id}\n                                onChange={this.onChangeId}\n                                required\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-1 col-form-label\">Date: </label>\n                        <div className=\"col-sm-4\">\n                            <input  type=\"text\" \n                                className=\"form-control form-control-sm\"\n                                value={this.state.date}\n                                onChange={this.onChangeDate}\n                                readOnly\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-auto col-form-label\">Item Name: </label>\n                        <div className=\"col-sm-5\">\n                            <input  type=\"text\" \n                                    className=\"form-control form-control-sm\"\n                                    value={this.state.item_name}\n                                    onChange={this.onChangeItemName}\n                                    required\n                            />\n                        </div>      \n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-2 col-form-label\">Item Description: </label>\n                        <div className=\"col-sm-6\">\n                            <input  type=\"text\" \n                                    className=\"form-control form-control-sm\"\n                                    value={this.state.item_description}\n                                    onChange={this.onChangeItemDescription}\n                                    required\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-2 col-form-label\">Item Category: </label>\n                        <div className=\"col-sm-5\">\n                            <input  type=\"text\" \n                                    className=\"form-control form-control-sm\"\n                                    value={this.state.item_category}\n                                    onChange={this.onChangeItemCategory}\n                                    required\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-1 col-form-label\">Colour: </label>\n                        <div className=\"col-sm-6\">\n                            <input  type=\"text\" \n                                    className=\"form-control form-control-sm\"\n                                    value={this.state.colour}\n                                    onChange={this.onChangeColour}\n                                    required\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-2 col-form-label\">Project Location: </label>\n                        <div className=\"col-sm-5\">\n                            <input  type=\"text\" \n                                    className=\"form-control form-control-sm\"\n                                    value={this.state.project_location}\n                                    onChange={this.onChangeProjectLocation}\n                                    required\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-auto col-form-label\">Cost Price: </label>\n                        <div className=\"col-sm-2\">\n                            <CurrencyInput  prefix=\"R\"\n                                            className=\"form-control form-control-sm currency\"\n                                            value={this.state.cost_price}\n                                            onChange={this.onChangeCostPrice}\n                                            required\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-auto col-form-label\">Quantity: </label>\n                        <div className=\"col-sm-2\">\n                            <input  type=\"number\" \n                                    className=\"form-control form-control-sm\"\n                                    value={this.state.quantity}\n                                    onChange={this.onChangeQuantity}\n                                    required\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create Stock Item\" className=\"btn btn-primary\"/>\n                    </div>\n                </form> ] : <h1>Please log in as an admin to create a new stock item</h1> }\n            </div>\n            </div>\n        )\n    }\n}\n\n// Using mapStateToProps to use isAuthenticated state\nfunction mapStateToProps(state) {\n    return {\n        isAdmin: state.auth.isAdmin\n    }\n}\n\nexport default connect(mapStateToProps, actions)(CreateStockItem);\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport CurrencyInput from 'react-currency-input';// Importing react component to input currency prefix in cost_price input tag, also supports decimals\nimport axios from 'axios';\n\n// Importing components\nimport AdminInventoryList from './AdminInventoryList';\nimport CreateStockItem from './CreateStockItem';\n\n\nclass EditStockItem extends Component {\n    constructor(props) {\n        super(props);\n        // initialising state\n        this.state = {\n            id: '',\n            date: new Date().toLocaleDateString(),\n            item_name: '',\n            item_description: '',\n            item_category: '',\n            colour: '',\n            project_location: '',\n            cost_price: 0.00,\n            quantity: 0\n        }\n        // binding event handlers\n        this.onChangeId = this.onChangeId.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onChangeItemName = this.onChangeItemName.bind(this);\n        this.onChangeItemDescription = this.onChangeItemDescription.bind(this);\n        this.onChangeItemCategory = this.onChangeItemCategory.bind(this);\n        this.onChangeColour = this.onChangeColour.bind(this);\n        this.onChangeProjectLocation = this.onChangeProjectLocation.bind(this);\n        this.onChangeCostPrice = this.onChangeCostPrice.bind(this);\n        this.onChangeQuantity = this.onChangeQuantity.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    // fetching stock item that was selected by user by matching id\n    componentDidMount() {\n        axios.get('http://localhost:3001/inventory/' + this.props.match.params.id)\n        .then(response => {\n            this.setState({\n                id: response.data.id,\n                date: response.data.date,\n                item_name: response.data.item_name,\n                item_description: response.data.item_description,\n                item_category: response.data.item_category,\n                colour: response.data.colour,\n                project_location: response.data.project_location,\n                cost_price: response.data.cost_price,\n                quantity: response.data.quantity\n            })\n        })\n        .catch(function(error) {\n            console.log(error)\n        })\n    }\n\n    onChangeId(e) {\n        this.setState({\n            id: e.target.value\n        });\n    }\n\n    onChangeDate(e) {\n        this.setState({\n            date: e.target.value\n        });\n    }\n\n    onChangeItemName(e) {\n        this.setState({\n            item_name: e.target.value\n        });\n    }\n\n    onChangeItemDescription(e) {\n        this.setState({\n            item_description: e.target.value\n        });\n    }\n\n    onChangeItemCategory(e) {\n        this.setState({\n            item_category: e.target.value\n        });\n    }\n\n    onChangeColour(e) {\n        this.setState({\n            colour: e.target.value\n        });\n    }\n\n    onChangeProjectLocation(e) {\n        this.setState({\n            project_location: e.target.value\n        });\n    }\n\n    onChangeCostPrice(event, value, maskedValue) {\n        this.setState({cost_price: value\n        });\n    }\n\n    onChangeQuantity(e) {\n        this.setState({\n            quantity: e.target.value\n        });\n    }\n\n    // Updating stock item by using axios.put and returning to /admin page when user clicks on onSubmit.\n    onSubmit(e) {\n        e.preventDefault();\n\n        const updateItem = {\n            id: this.state.id,\n            date: this.state.date,\n            item_name: this.state.item_name,\n            item_description: this.state.item_description,\n            item_category: this.state.item_category,\n            colour: this.state.colour,\n            project_location: this.state.project_location,\n            cost_price: this.state.cost_price,\n            quantity: this.state.quantity\n        };\n        axios.put('http://localhost:3001/inventory/update/'+this.props.match.params.id, updateItem)\n        .then(res => console.log(res.data));\n        \n        this.props.history.push('/admin');\n    }\n\n    render() {\n        const { match } = this.props\n        return (\n            <div>\n                {/* Matching /admin and /create routes when user clicks on links in Navbar */}\n                <Switch>\n                    <Route path={`${match.path}/admin`} component={AdminInventoryList} />\n                    <Route path={`${match.path}/create`} component={CreateStockItem} />\n                </Switch>\n                <div className=\"container\">\n                    <h3 key=\"formHeading\">Update Stock Item</h3>\n                    <form onSubmit={this.onSubmit} key=\"form\">\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-1 col-form-label\">ID: </label>\n                            <div className=\"col-sm-4\">\n                                <input  type=\"text\" \n                                        className=\"form-control form-control-sm\"\n                                        value={this.state.id || ''}\n                                        onChange={this.onChangeId}\n                                        required\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-1 col-form-label\">Date: </label>\n                            <div className=\"col-sm-4\">\n                                <input  type=\"text\" \n                                        className=\"form-control form-control-sm\"\n                                        value={this.state.date || ''}\n                                        onChange={this.onChangeDate}\n                                        readOnly\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-auto col-form-label\">Item Name: </label>\n                            <div className=\"col-sm-5\">\n                                <input  type=\"text\" \n                                        className=\"form-control form-control-sm\"\n                                        value={this.state.item_name || ''}\n                                        onChange={this.onChangeItemName}\n                                        required\n                                />\n                            </div>      \n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-2 col-form-label\">Item Description: </label>\n                            <div className=\"col-sm-6\">\n                                <input  type=\"text\" \n                                        className=\"form-control form-control-sm\"\n                                        value={this.state.item_description || ''}\n                                        onChange={this.onChangeItemDescription}\n                                        required\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-2 col-form-label\">Item Category: </label>\n                            <div className=\"col-sm-5\">\n                                <input  type=\"text\" \n                                        className=\"form-control form-control-sm\"\n                                        value={this.state.item_category || ''}\n                                        onChange={this.onChangeItemCategory}\n                                        required\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-1 col-form-label\">Colour: </label>\n                            <div className=\"col-sm-6\">\n                                <input  type=\"text\" \n                                        className=\"form-control form-control-sm\"\n                                        value={this.state.colour || ''}\n                                        onChange={this.onChangeColour}\n                                        required\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-2 col-form-label\">Project Location: </label>\n                            <div className=\"col-sm-5\">\n                                <input  type=\"text\" \n                                        className=\"form-control form-control-sm\"\n                                        value={this.state.project_location || ''}\n                                        onChange={this.onChangeProjectLocation}\n                                        required\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-auto col-form-label\">Cost Price: </label>\n                            <div className=\"col-sm-2\">\n                                <CurrencyInput  prefix=\"R\"\n                                                className=\"form-control form-control-sm currency\"\n                                                value={this.state.cost_price || 0.00}\n                                                onChange={this.onChangeCostPrice}\n                                                required\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label className=\"col-sm-auto col-form-label\">Quantity: </label>\n                            <div className=\"col-sm-2\">\n                                <input  type=\"number\" \n                                        className=\"form-control form-control-sm\"\n                                        value={this.state.quantity || 0}\n                                        onChange={this.onChangeQuantity}\n                                        required\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Update Stock Item\" className=\"btn btn-primary\"/>\n                        </div>\n                    </form>\n                </div>  \n            </div>\n        )\n    }\n}\n\nexport default EditStockItem;","import React, { Component } from 'react';\n\n// Styling Login component\nclass CustomInput extends Component {\n    render() {\n        const { input: { value, onChange } } = this.props;\n        return (\n            <div className=\"form-group\">\n                <label htmlFor={ this.props.id }>{ this.props.label }</label>\n                <input \n                    name= { this.props.name }\n                    id= {this.props.id }\n                    placeholder={ this.props.placeholder }\n                    className=\"form-control\"\n                    type= { this.props.type }\n                    value= { value }\n                    onChange={ onChange }\n                    />\n            </div>\n        )\n    }\n}\n\nexport default CustomInput;","import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n// Import Google and Facebook react login to use Google and Facebook buttons\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\n\nimport * as actions from '/Users/melissa/Desktop/InventoryManagementApp/client/src/actions/index.action';\nimport CustomInput from './CustomInput';\n\n// Create a login form using reduxForm.\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.responseGoogle = this.responseGoogle.bind(this);\n        this.responseFacebook = this.responseFacebook.bind(this);\n    }\n\n    // A function to call login actioncreator and redirect to /admin or /user page\n    async onSubmit(formData) {\n        // call actioncreator\n        await this.props.login(formData);\n        if (this.props.isAdmin) {\n            this.props.history.push('/admin');\n        } else {\n            this.props.history.push('/user')\n        }\n    }\n\n    // A function to call google actioncreator and redirect to /user page \n    async responseGoogle(res) {\n        await this.props.oauthGoogle(res.accessToken);\n        if (!this.props.errorMessage) {\n            this.props.history.push('/user');\n        }\n    }\n\n    // A function to call facebook actioncreator and redirect to /user page\n    async responseFacebook(res) {\n        console.log('responseFacebook', res);\n        await this.props.oauthFacebook(res.accessToken);\n        if (!this.props.errorMessage) {\n            this.props.history.push('/user');\n        }\n    }\n\n    render() {\n        const { handleSubmit } = this.props\n        return (\n            <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col localLoginform\">\n                            <form onSubmit={handleSubmit(this.onSubmit)} className=\"container\">\n                                <fieldset>\n                                    <Field\n                                        name=\"email\"\n                                        type=\"text\"\n                                        id=\"email\"\n                                        label=\"Enter your email\"\n                                        placeholder=\"example@example.com\"\n                                        component= { CustomInput } />\n                                </fieldset>\n                                <fieldset>\n                                    <Field\n                                        name=\"password\"\n                                        type=\"password\"\n                                        id=\"password\"\n                                        label=\"Enter your password\"\n                                        placeholder=\"password\"\n                                        component= { CustomInput } />\n                                </fieldset>\n                                <fieldset style={{}}>\n                                    <Field\n                                        name=\"isAdmin\"\n                                        type=\"checkbox\"\n                                        id=\"isAdmin\"\n                                        label=\"Are you an admin?\"\n                                        component= { CustomInput } />\n                                </fieldset>\n\n                                { this.props.errorMessage ? \n                                <div className=\"alert alert-danger\">\n                                    { this.props.errorMessage }\n                                </div> : null }\n\n                                <button type=\"submit\" className=\"btn btn-primary loginButton\">Login</button>\n                            </form>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"text-center\">\n                                <div className=\"alert alert-warning\">\n                                    Login using Facebook or Google\n                                </div>\n                                <FacebookLogin \n                                    appId=\"1710043372493359\"\n                                    textButton=\"Facebook\"\n                                    fields=\"name, email, picture\"\n                                    callback={this.responseFacebook} \n                                />\n                                \n                                <GoogleLogin \n                                    clientId=\"1024070526390-5t96st7l1ng0uldormdspbo6i0dbrk24.apps.googleusercontent.com\"\n                                    buttonText=\"Google\"\n                                    onSuccess={this.responseGoogle}\n                                    onFailure={this.responseGoogle}\n                                    className=\"googleButton\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n            </div>\n            \n        )\n    }\n}\n\n// Using mapStateToProps to use isAuthenticated and isAdmin state\nfunction mapStateToProps(state) {\n    return {\n        errorMessage: state.auth.errorMessage,\n        isAdmin: state.auth.isAdmin\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, actions),\n    reduxForm({ form: 'login'})\n)(Login) \n","import { AUTH_LOGIN, AUTH_SIGN_OUT, AUTH_ERROR, SET_ADMIN_PRIVILEGES } from '../actions/types.action';\n\n// Setting default state.\nconst DEFAULT_STATE = {\n    isAuthenticated: false,\n    token: '',\n    errorMessage: '',\n    isAdmin: false\n}\n\n// setting type actions\nexport default (state = DEFAULT_STATE, action) => {\n    switch(action.type) {\n        case AUTH_LOGIN:\n           return { ...state, token: action.payload, isAuthenticated: true, errorMessage: '' }\n        case AUTH_SIGN_OUT:\n            return { ...state, token: action.payload, isAuthenticated: false, errorMessage: '' }\n        case AUTH_ERROR:\n            return { ...state, errorMessage: action.payload }\n        case SET_ADMIN_PRIVILEGES:\n            return {...state, isAdmin: true }\n        default:\n            return state\n        \n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './auth.reducer';\n\n// Setting up reducers\nexport default combineReducers({\n    form: formReducer,\n    auth: authReducer\n});","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport * as actions from '/Users/melissa/Desktop/InventoryManagementApp/client/src/actions/index.action';\n\n// creating function to dislpay the stock items within a table layout.\nconst Inventory = props => (\n    <tr>\n        <td className=\"idTableData\">{props.inventory.id}</td>\n        <td>{props.inventory.date}</td>\n        <td>{props.inventory.item_name}</td>\n        <td>{props.inventory.item_description}</td>\n        <td>{props.inventory.item_category}</td>\n        <td>{props.inventory.colour}</td>\n        <td>{props.inventory.project_location}</td>\n        <td className=\"costPriceTableData\">R {props.inventory.cost_price}</td>\n        <td className=\"quantityTableData\">{props.inventory.quantity}</td>\n    </tr>\n)\n\n\nclass UserInventoryList extends Component {\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {inventory: []};// Setting initial state as array to store the inventory list in this array.\n    }\n\n    // Getting the inventory list from the database\n    componentDidMount() {\n        this._isMounted = true;\n\n        axios.get('http://localhost:3001/inventory/')\n        .then(response => {\n            if (this._isMounted) {\n                this.setState({inventory: response.data});\n            } \n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    componentDidUpdate() {\n        axios.get('http://localhost:3001/inventory/')\n        .then(response => {\n            if (this._isMounted) {\n                this.setState({inventory: response.data});\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    // Using array.map to create an array of all stock items stored in the database.\n    inventoryList() {\n        return this.state.inventory.map(currentitem => {\n            return <Inventory inventory={currentitem} key={currentitem._id} />\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"inventoryList\">\n                <h3>Inventory List</h3>\n                <table className=\"table table-bordered table-hover inventoryListTable\" style={{ width: '100%' }}>\n                    <thead>\n                        <tr>\n                            <th className=\"idTableHeading\">ID</th>\n                            <th>Date Added</th>\n                            <th>Item Name</th>\n                            <th>Item Description</th>\n                            <th>Item Category</th>\n                            <th>Colour</th>\n                            <th>Project Location</th>\n                            <th>Cost Price</th>\n                            <th>Quantity</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.inventoryList() }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\n// Using mapStateToProps to use isAuthenticated and isAdmin state\nfunction mapStateToProps(state) {\n    return {\n        isAuth: state.auth.isAuthenticated,\n        isAdmin: state.auth.isAdmin\n    }\n}\n\nexport default connect(mapStateToProps, actions)(UserInventoryList);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '/Users/melissa/Desktop/InventoryManagementApp/client/src/actions/index.action';\n\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props); \n        this.signOut = this.signOut.bind(this);\n    }\n\n    // A function to call signOut actioncreator and redirect to home page.\n    signOut() {\n        this.props.signOut();\n        window.location = '/';\n    }\n\n    render() {\n        return (\n            <div>\n            {/* Create navigation bar and used Link element to get route path */}\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark navigationBar\" style={{ marginBottom: \"30px\" }}>\n                <h3 className=\"navbar-brand navbarBrandHeading\">Interior Design Inventory Management</h3>\n                    <div className=\"collapse navbar-collapse\">\n                        { this.props.isAuth ? \n                        [<ul key=\"navbar\" className=\"navbar-nav ml-auto navbarInventoryLinks\">\n                            { !this.props.isAdmin ?\n                            [<li key=\"inventoryList\" className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/user\">Inventory List</Link>\n                            </li>,\n                            <li key=\"userProfile\" className=\"nav-item profileNavIndicator\">\n                                <Link className=\"nav-link\" to=\"#\">User Profile</Link>\n                            </li>] : null }\n                            { this.props.isAdmin ? \n                            [<li key=\"inventory\" className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/admin\">Inventory List</Link>\n                            </li>,\n                            <li key=\"addItem\" className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/create\">Add Item\n                                    <span> +</span></Link>\n                            </li>,\n                            <li key=\"adminProfile\" className=\"nav-item profileNavIndicator\">\n                                <Link className=\"nav-link\" to=\"#\">Admin Profile</Link>\n                            </li>] : null}\n                        </ul>] : null }\n                        <ul className=\"navbar-nav ml\">\n                            {/* Logout will be shown if user is authenticated */}\n                            { this.props.isAuth ?\n                                <li className=\"nav-item logoutNavItem\">\n                                <Link to=\"/signout\" className=\"nav-link logoutNavLink\" onClick={this.signOut}>Logout</Link>\n                                </li> : null } \n                        </ul>\n                    </div>\n            </nav>\n        </div>\n        )\n    }\n}\n\n// Using mapStateToProps to use isAuthenticated state\nfunction mapStateToProps(state) {\n    return {\n        isAuth: state.auth.isAuthenticated,\n        isAdmin: state.auth.isAdmin\n    }\n}\n\nexport default connect(mapStateToProps, actions)(Navbar);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index.action';\nimport '../App.css'\n\n// Import component\nimport Navbar from './Navbar';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n          <div>\n          { this.props.children }\n          </div>\n      </div>\n    );\n  } \n}\n\nexport default connect(null, actions)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\n\n// Import components\nimport CreateStockItem from './components/CreateStockItem';\nimport EditStockItem from './components/EditStockItem';\nimport Login from './components/Login';\nimport reducers from './reducers/index.reducer';\nimport AdminInventoryList from './components/AdminInventoryList';\nimport UserInventoryList from './components/UserInventoryList';\nimport App from './components/App';\n\n\n// Getting jwt token and admin authentication from local storage\nconst jwtToken = localStorage.getItem('JWT_TOKEN');\nconst isAdmin = localStorage.getItem('Admin') ? true : false;\n\n// Creating store\n// Creating Routes\nReactDOM.render(\n  <Provider store={createStore(reducers, {\n    auth: {\n      token: jwtToken,\n      isAuthenticated: jwtToken ? true : false,\n      isAdmin: isAdmin\n    }    \n    \n  }, applyMiddleware(reduxThunk))}>\n    <Router> \n      <App>\n        <Route exact path=\"/admin\" component={AdminInventoryList} />\n        <Route exact path=\"/user\" component={UserInventoryList} />\n        <Route exact path=\"/create\" component={CreateStockItem} />\n        <Route exact path=\"/edit/:id\" component={EditStockItem} />\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/signout\" component={Login} />\n        </App>\n    </Router>\n  </Provider>,\n  document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}